ARG BUILD_IMAGE=
ARG ASSETS_IMAGE=

FROM ${ASSETS_IMAGE} AS assets
FROM ${BUILD_IMAGE}

ARG NAMESPACE=gitlab-org
ARG PROJECT=gitlab
ARG VERSION=v12.0.2-ee
ARG API_URL=
ARG API_TOKEN=

ARG NODE_VERSION=14.15.4
ARG YARN_VERSION=1.22.5
ARG LIBRE2_VERSION=2019-09-01
ARG GITLAB_USER=git

ADD gitlab-ruby.tar.gz /
ADD postgresql.tar.gz /
ADD gitlab-elasticsearch-indexer.tar.gz /
ADD gitlab-graphicsmagick.tar.gz /

ENV PRIVATE_TOKEN=${API_TOKEN}
ENV LIBDIR ${LIBDIR:-"/usr/lib64"}

RUN dnf ${DNF_OPTS} install -by --nodocs git krb5-devel

RUN mkdir /assets \
    && install /usr/local/postgresql/bin/* /usr/bin/ \
    && cp -R /usr/local/postgresql/lib/. ${LIBDIR}/ \
    && cp -R /usr/local/postgresql/include/. /usr/include/ \
    && cp -R /usr/local/postgresql/share/. /usr/share/ \
    && curl --retry 6 -L https://github.com/google/re2/archive/${LIBRE2_VERSION}.tar.gz | tar -xz \
    && cd re2-${LIBRE2_VERSION} \
    && make \
    && make install \
    && mkdir -p /libre2/{lib,include} \
    && cp -R /usr/local/lib/{libre2.*,pkgconfig/} /libre2/lib \
    && cp -R /usr/local/include/re2 /libre2/include/ \
    && curl --retry 6 -L https://nodejs.org/download/release/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz | tar --strip-components 1 -xzC /usr/local/ \
    && mkdir /usr/local/yarn \
    && curl --retry 6 -L https://yarnpkg.com/downloads/${YARN_VERSION}/yarn-v${YARN_VERSION}.tar.gz | tar -xzC /usr/local/yarn --strip 1 \
    && ln -sf /usr/local/yarn/bin/yarn /usr/local/bin \
    && printf 'install: --no-document\nupdate: --no-document\n' > ~/.gemrc

ENV RAILS_ENV=production
ENV NODE_ENV=production
ENV USE_DB=false
ENV SKIP_STORAGE_VALIDATION=true

COPY shared/build-scripts/ /build-scripts

RUN /gitlab-fetch \
        "${API_URL}" \
        "${NAMESPACE}" \
        "${PROJECT}" \
        "${VERSION}" \
    && mkdir -p /srv \
    && mv ${PROJECT}-${VERSION} /srv/gitlab \
    && cp REVISION /srv/gitlab \
    && cd /srv/gitlab \
    && printf 'gitlab-cloud-native-image' > INSTALLATION_TYPE \
    && for cfg in config/{gitlab,resque,secrets}.yml; do cp ${cfg}.example ${cfg} ; done \
    && cp config/database.yml.postgresql config/database.yml \
    && bundle config set --local path /srv/gitlab/vendor/bundle \
    && bundle config set --local deployment 'true' \
    && bundle config set --local without 'development test mysql aws' \
    && bundle install --jobs $(nproc) --retry 5 \
    && yarn install --production --pure-lockfile \
    && rm -rf node_modules/ tmp/ spec/ ee/spec/ \
    && rm -rf qa/ rubocop/ tooling/ .gitlab/ .github/ docker/ \
    && rm -rf changelogs/ danger/ Dangerfile \
    && /build-scripts/cleanup-gems /srv/gitlab/vendor/bundle/ruby \
    && mkdir /assets/licenses && cp LICENSE /assets/licenses/GitLab.txt

COPY --from=assets assets /srv/gitlab/public/assets/

RUN mkdir -p /assets/usr/{bin,lib} /assets${LIBDIR} \
    && cp /usr/local/bin/gitlab-elasticsearch-indexer /assets/usr/bin/ \
    && install /usr/local/postgresql/bin/* /assets/usr/bin/ \
    && cp -R /usr/local/postgresql/lib/. /assets${LIBDIR}/ \
    && cp -R --parents \
        /usr/local/lib/libre2.* \
        /srv/gitlab \
        /usr/local/bin/gm \
        /usr/local/share/doc/GraphicsMagick/Copyright.txt \
        /assets
