ARG RUBY_IMAGE=

FROM ${RUBY_IMAGE}

ARG GITLAB_USER=git
ARG GITLAB_DATA=/var/opt/gitlab
ARG DNF_OPTS

LABEL source="https://gitlab.com/gitlab-org/build/CNG/-/tree/master/gitlab-rails" \
      name="GitLab Rails" \
      maintainer="GitLab Distribution Team" \
      vendor="GitLab" \
      version=${GITLAB_VERSION} \
      release=${GITLAB_VERSION} \
      summary="Rails container for GitLab." \
      description="Rails container for GitLab."

RUN dnf clean all \
    && rm -r /var/cache/dnf \
    && dnf ${DNF_OPTS} install -by --nodocs \
            libicu tzdata uuid \
            libpng libjpeg-turbo zlib libtiff \
    && adduser -m ${GITLAB_USER} \
    && mkdir -p ${GITLAB_DATA}/{.upgrade-status,data,repo,config} \
    && chown -R ${GITLAB_USER}:${GITLAB_USER} ${GITLAB_DATA} \
    && chmod -R ug+rwX,o-rwx ${GITLAB_DATA}/repo \
    && chmod -R ug-s ${GITLAB_DATA}/repo

ADD gitlab-rails-ee.tar.gz /

COPY scripts/ /scripts

RUN chown -R ${GITLAB_USER}:${GITLAB_USER} /scripts /srv/gitlab \
    && chmod o-w /scripts/lib /scripts/lib/checks \
    && mv /srv/gitlab/log /var/log/gitlab \
    && ln -s /var/log/gitlab /srv/gitlab/log \
    && cd /srv/gitlab \
    && mkdir -p public/uploads \
    && chmod o-rwx config/database.yml \
    && chmod 0600 config/secrets.yml \
    && chmod -R u+rwX builds/ shared/artifacts/ \
    && chmod -R ug+rwX shared/pages/ \
    && chmod 0700 public/uploads \
    && mkdir /home/git/gitlab-shell \
    && chown ${GITLAB_USER}:${GITLAB_USER} /home/git/gitlab-shell \
    && ln -s /srv/gitlab/GITLAB_SHELL_VERSION /home/git/gitlab-shell/VERSION \
    && sed -e '/host: localhost/d' -e '/port: 80/d' -i config/gitlab.yml \
    && sed -e "s/# user:.*/user: ${GITLAB_USER}/" -e "s:/home/git/repositories:${GITLAB_DATA}/repo:" -i config/gitlab.yml \
    && ldconfig

ENV RAILS_ENV=production
ENV EXECJS_RUNTIME=Disabled
ENV CONFIG_TEMPLATE_DIRECTORY=/srv/gitlab/config
ENV UPGRADE_STATUS_DIR=${GITLAB_DATA}/.upgrade-status

# Set the path that bootsnap will use for cache
ENV BOOTSNAP_CACHE_DIR=/srv/gitlab/bootsnap
# Generate bootsnap cache
RUN echo "Generating bootsnap cache"; \
    cd /srv/gitlab && \
    su ${GITLAB_USER} -c "mkdir ${BOOTSNAP_CACHE_DIR}"  && \
    su ${GITLAB_USER} -c "ENABLE_BOOTSNAP=1 BOOTSNAP_CACHE_DIR=${BOOTSNAP_CACHE_DIR} bin/rake about" && \
    du -hs ${BOOTSNAP_CACHE_DIR} ;
# exit code of this command will be that of `du`

VOLUME ${GITLAB_DATA} /var/log
