#!/bin/bash

set -e

if [ "${USE_GITLAB_LOGGER-1}" -eq 1 ]; then
    /usr/local/bin/gitlab-logger /var/log/gitlab &
else
    if command -v xtail >/dev/null; then
        xtail /var/log/gitlab &
    else
        # touch logs that would be generated by Jobs
        touch /var/log/gitlab/repocheck.log
        tail -f /var/log/gitlab/* &
    fi
fi

if [ -n "${SIDEKIQ_NEGATE_QUEUES}" ]; then
    queues="${SIDEKIQ_NEGATE_QUEUES}"
    negate_flag='--negate'
else
    queues="${SIDEKIQ_QUEUES:-*}"
    negate_flag=''
fi

if [[ "${SIDEKIQ_QUEUE_SELECTOR}" = 'true' ]]; then
    queue_selector_flag='--queue-selector'
else
    queue_selector_flag=''
fi

# switch to runtime directory
cd /srv/gitlab

# While we do not run more than 1 Sidekiq worker process, we are moving
# the metrics server out of the Sidekiq worker processes and into a sidecar,
# which in turn is supervised by sidekiq-cluster:
#
# https://gitlab.com/groups/gitlab-org/-/epics/6409
#
# For reasons of simplicity, we therefore start a single-worker "cluster".
#
exec bin/sidekiq-cluster \
    -r /srv/gitlab \
    -e production \
    --min-concurrency ${SIDEKIQ_CONCURRENCY_MIN:-$SIDEKIQ_CONCURRENCY} \
    --max-concurrency ${SIDEKIQ_CONCURRENCY_MAX:-$SIDEKIQ_CONCURRENCY} \
    -t $SIDEKIQ_TIMEOUT \
    $queue_selector_flag \
    $negate_flag \
    "${queues}"
